{"version":3,"sources":["redux/constants.js","redux/actions/commonActions.js","components/Navbar.js","components/ProtectedRoute.js","App.js","redux/reducers/alertReducer.js","redux/reducers/commonReducer.js","redux/reducers/postReducer.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js","components/Loading.js","components/Error404.js"],"names":["TOGGLE_DARK_MODE","SEND_REGISTER_REQUEST","REGISTER_SUCCESSFUL","REGISTER_FAILED","ERROR","SUCCESS","INFO","CLEAR_ALERT","GET_AUTH_DATA","AUTHENTICATED","NOT_AUTHENTICATED","LOADING_ON","LOADING_OFF","LOGOUT","FETCH_POST_SUCCESS","FETCH_POST_FAILURE","FETCH_USER_INFO_SUCCESS","FETCH_USER_INFO_FAILURE","CLEAR_ALL","FETCH_A_POST_SUCCESS","FETCH_A_POST_FAILURE","require","Navbar","dispatch","useDispatch","useSelector","state","common","dark","isUserLoggedIn","useState","navExpanded","setNavExpanded","resize","window","innerWidth","useEffect","addEventListener","removeEventListener","useQuery","axios","get","isLoading","data","isError","className","clsx","to","onClick","src","alt","details","name","split","role","a","post","success","type","payload","message","ProtectedRoute","Component","component","rest","render","props","Homepage","React","lazy","Post","Register","Login","CreatePost","Profile","App","alert","useAlert","alertOnClose","Boolean","Number","Cookies","authenticated","onClose","error","info","fallback","Loading","path","exact","Error404","alertReducer","action","commonReducer","loading","postReducer","fetchedPosts","userPosts","visitedPosts","profilePosts","userReducer","user","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","defaults","baseURL","withCredentials","queryClient","QueryClient","ReactDOM","StrictMode","client","transition","transitions","FADE","position","positions","BOTTOM_LEFT","template","AlertTemplate","timeout","offset","document","getElementById","history","useHistory","goBack"],"mappings":"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","file":"static/js/main.b15571be.chunk.js","sourcesContent":["export const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\";\nexport const SEND_REGISTER_REQUEST = \"SEND_REGISTER_REQUEST\";\nexport const REGISTER_SUCCESSFUL = \"REGISTER_SUCCESSFUL\";\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\nexport const ERROR = \"ERROR\";\nexport const SUCCESS = \"SUCCESS\";\nexport const INFO = \"INFO\";\nexport const CLEAR_ALERT = \"CLEAR_ALERT\";\nexport const GET_AUTH_DATA = \"GET_AUTH_DATA\";\nexport const AUTHENTICATED = \"AUTHENTICATED\";\nexport const NOT_AUTHENTICATED = \"NOT_AUTHENTICATED\";\nexport const LOADING_ON = \"LOADING_ON\";\nexport const LOADING_OFF = \"LOADING_OFF\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_POST_SUCCESS = \"FETCH_POST_SUCCESS\";\nexport const FETCH_POST_FAILURE = \"FETCH_POST_FAILURE\";\nexport const FETCH_USER_INFO_SUCCESS = \"FETCH_USER_INFO_SUCCESS\";\nexport const FETCH_USER_INFO_FAILURE = \"FETCH_USER_INFO_FAILURE\";\nexport const CLEAR_ALL = \"CLEAR_ALL\";\nexport const FETCH_A_POST_SUCCESS = \"FETCH_A_POST_SUCCESS\";\nexport const FETCH_A_POST_FAILURE = \"FETCH_A_POST_FAILURE\";\n","import axios from \"axios\";\n\nconst {\n  TOGGLE_DARK_MODE,\n  LOGOUT,\n  SUCCESS,\n  ERROR,\n  CLEAR_ALL,\n} = require(\"redux/constants\");\n\nexport const toggle_dark_mode = () => {\n  return {\n    type: TOGGLE_DARK_MODE,\n  };\n};\n\nexport const logout = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(\"/user/logout\");\n      switch (data.success) {\n        case true:\n          dispatch({\n            type: LOGOUT,\n          });\n          dispatch({\n            type: CLEAR_ALL,\n          });\n          dispatch({\n            type: SUCCESS,\n            payload: data.message,\n          });\n          break;\n        case false:\n          dispatch({\n            type: ERROR,\n            payload: data.message,\n          });\n          dispatch({\n            type: LOGOUT,\n          });\n          break;\n        default:\n          return;\n      }\n    } catch (error) {\n      dispatch({\n        type: ERROR,\n        message: \"Something went wrong!\",\n      });\n      dispatch({\n        type: LOGOUT,\n      });\n    }\n  };\n};\n","import clsx from \"clsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"styles/navbar.scss\";\nimport { MdDarkMode, MdLightMode } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout, toggle_dark_mode } from \"redux/actions/commonActions\";\nimport { HiOutlineMenuAlt4 } from \"react-icons/hi\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nexport default function Navbar() {\n  const dispatch = useDispatch();\n  const { dark, isUserLoggedIn } = useSelector((state) => state.common);\n  // const { user } = useSelector((state) => state.user);\n  const [navExpanded, setNavExpanded] = useState(false);\n\n  const resize = () => {\n    if (window.innerWidth > 576) {\n      return setNavExpanded(true);\n    }\n    setNavExpanded(false);\n  };\n\n  useEffect(() => {\n    if (window.innerWidth > 576) {\n      setNavExpanded(true);\n    }\n    window.addEventListener(\"resize\", resize);\n\n    return () => {\n      window.removeEventListener(\"resize\", null);\n    };\n  }, []);\n\n  const { isLoading, data, isError } = useQuery(\"userData\", () =>\n    axios.get(\"/user/fetchUserInfo?fields=name\")\n  );\n\n  return (\n    <div\n      className={clsx(\n        \"navbar px-1 px-md-4 py-2\",\n        dark ? \"navbar_dark\" : \"navbar_light\"\n      )}\n    >\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Blog\n        </Link>\n        <button\n          className=\"menu-btn btn d-sm-none\"\n          onClick={() => setNavExpanded(!navExpanded)}\n        >\n          <HiOutlineMenuAlt4 className=\"menu-btn-icon\" />\n        </button>\n        {navExpanded && (\n          <ul\n            className={clsx(\n              \"navbar-nav  flex-row align-items-center\",\n              navExpanded && \"expanded\"\n            )}\n          >\n            {isUserLoggedIn ? (\n              <>\n                <li className=\"nav-item me-3\">\n                  <Link\n                    to=\"/create-post\"\n                    className=\"cta nav-link btn btn-primary px-2\"\n                  >\n                    Create post\n                  </Link>\n                </li>\n                <li className=\"nav-item me-3\">\n                  <Link to=\"/profile\" className=\"nav-link p-2 profile-link\">\n                    <img\n                      src=\"https://avatars.dicebear.com/api/male/john.svg?mood[]=happy\"\n                      alt=\"\"\n                    />\n                    <span>\n                      {!isLoading && !isError\n                        ? data.data.details.name.split(\" \")[0]\n                        : \"Loading\"}\n                    </span>\n                  </Link>\n                </li>\n                <li\n                  className=\"nav-item me-3\"\n                  role=\"button\"\n                  onClick={() => dispatch(logout())}\n                >\n                  <button className=\"nav-link btn btn-link  px-2\">\n                    Logout\n                  </button>\n                </li>\n              </>\n            ) : (\n              <>\n                <li className=\"nav-item me-3\">\n                  <Link to=\"/login\" className=\"nav-link btn btn-link px-2\">\n                    Login\n                  </Link>\n                </li>\n                <li className=\"nav-item me-3\">\n                  <Link\n                    to=\"/register\"\n                    className=\"cta nav-link btn btn-primary  px-2\"\n                  >\n                    Register\n                  </Link>\n                </li>\n              </>\n            )}\n            <li\n              className=\"nav-item  dark-mode-switch\"\n              // role=\"button\"\n              onClick={() => dispatch(toggle_dark_mode())}\n            >\n              {dark ? (\n                <MdLightMode className=\"icon\" />\n              ) : (\n                <MdDarkMode className=\"icon\" />\n              )}\n            </li>\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nexport default function ProtectedRoute({ component: Component, ...rest }) {\n  const { isUserLoggedIn } = useSelector((state) => state.common);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isUserLoggedIn ? <Redirect to=\"/login\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n","import React, { Suspense, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./components/Navbar\";\nimport ProtectedRoute from \"components/ProtectedRoute\";\nimport clsx from \"clsx\";\nimport \"styles/app.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport {\n  INFO,\n  CLEAR_ALERT,\n  ERROR,\n  SUCCESS,\n  AUTHENTICATED,\n  NOT_AUTHENTICATED,\n} from \"redux/constants\";\nimport Cookies from \"js-cookie\";\nimport Loading from \"components/Loading\";\nimport Error404 from \"components/Error404\";\nconst Homepage = React.lazy(() => import(\"components/Homepage\"));\nconst Post = React.lazy(() => import(\"components/Post\"));\nconst Register = React.lazy(() => import(\"components/Register\"));\nconst Login = React.lazy(() => import(\"components/Login\"));\nconst CreatePost = React.lazy(() => import(\"components/CreatePost\"));\nconst Profile = React.lazy(() => import(\"components/Profile\"));\nfunction App() {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { dark } = useSelector((state) => state.common);\n  const { type, message } = useSelector((state) => state.alert);\n  const alertOnClose = () => {\n    dispatch({ type: CLEAR_ALERT });\n  };\n\n  const [authenticated, setAuthenticated] = useState(() =>\n    Boolean(Number(Cookies.get(\"isUserLoggedIn\")))\n  );\n  useEffect(() => {\n    if (!authenticated) {\n      return dispatch({\n        type: NOT_AUTHENTICATED,\n        // type: AUTHENTICATED,\n      });\n    } else {\n      return dispatch({\n        type: AUTHENTICATED,\n      });\n    }\n  }, [authenticated]);\n\n  useEffect(() => {\n    switch (type) {\n      case SUCCESS:\n        alert.success(message, {\n          onClose: alertOnClose,\n        });\n        break;\n      case ERROR:\n        alert.error(message, {\n          onClose: alertOnClose,\n        });\n        break;\n      case INFO:\n        alert.info(message, {\n          onClose: alertOnClose,\n        });\n        break;\n      default:\n        break;\n    }\n  }, [type, message]);\n\n  return (\n    <Router>\n      <div className={clsx(\"app\", dark ? \"app_dark\" : \"app_light\")}>\n        <Navbar />\n\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Homepage} />\n            <Route path=\"/post/:id\" component={Post} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n            <ProtectedRoute path=\"/create-post\" component={CreatePost} />\n            <ProtectedRoute path=\"/profile\" component={Profile} />\n            <Route path=\"*\" component={Error404} />\n          </Switch>\n        </Suspense>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { CLEAR_ALERT, ERROR, INFO, SUCCESS } from \"redux/constants\";\n\nconst alertReducer = (state = { type: null, message: null }, action) => {\n  switch (action.type) {\n    case ERROR:\n      return {\n        ...state,\n        type: ERROR,\n        message: action.payload,\n      };\n    case INFO:\n      return {\n        ...state,\n        type: INFO,\n        message: action.payload,\n      };\n    case SUCCESS:\n      return {\n        ...state,\n        type: SUCCESS,\n        message: action.payload,\n      };\n    case CLEAR_ALERT:\n      return {\n        type: null,\n        message: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default alertReducer;\n","const {\n  TOGGLE_DARK_MODE,\n  AUTHENTICATED,\n  NOT_AUTHENTICATED,\n  LOADING_ON,\n  LOADING_OFF,\n  LOGOUT,\n} = require(\"redux/constants\");\n\nconst commonReducer = (\n  state = { dark: false, isUserLoggedIn: null },\n  action\n) => {\n  switch (action.type) {\n    case TOGGLE_DARK_MODE:\n      return {\n        ...state,\n        dark: !state.dark,\n      };\n    case LOADING_ON:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LOADING_OFF:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case AUTHENTICATED:\n      return {\n        ...state,\n        isUserLoggedIn: true,\n      };\n\n    case NOT_AUTHENTICATED:\n      return {\n        ...state,\n        isUserLoggedIn: false,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isUserLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default commonReducer;\n","const {\n  FETCH_POST_SUCCESS,\n  FETCH_POST_FAILURE,\n  CLEAR_ALL,\n  FETCH_A_POST_SUCCESS,\n} = require(\"redux/constants\");\n\nconst postReducer = (\n  state = {\n    fetchedPosts: [],\n    userPosts: [],\n    visitedPosts: [],\n  },\n  action\n) => {\n  switch (action.type) {\n    case CLEAR_ALL:\n      return {\n        fetchedPosts: [],\n        profilePosts: [],\n        userPosts: [],\n        visitedPosts: [],\n      };\n    case FETCH_POST_SUCCESS:\n      return {\n        ...state,\n        fetchedPosts: [\n          // ...state.fetchedPosts,\n          ...action.payload,\n        ],\n      };\n    case FETCH_POST_FAILURE:\n      return state;\n\n    case FETCH_A_POST_SUCCESS:\n      return {\n        ...state,\n        visitedPosts: [...state.visitedPosts, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","const {\n  FETCH_USER_INFO_SUCCESS,\n  FETCH_USER_INFO_FAILURE,\n  CLEAR_ALL,\n} = require(\"redux/constants\");\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CLEAR_ALL:\n      return {};\n    case FETCH_USER_INFO_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case FETCH_USER_INFO_FAILURE:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport alertReducer from \"./alertReducer\";\nimport commonReducer from \"./commonReducer\";\nimport postReducer from \"./postReducer\";\nimport userReducer from \"./userReducer\";\n\nconst rootReducer = combineReducers({\n  common: commonReducer,\n  alert: alertReducer,\n  post: postReducer,\n  user: userReducer,\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"redux/reducers/rootReducer\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\nimport axios from \"axios\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nconst isProduction = process.env.REACT_APP_NODE_ENV === \"production\";\n\naxios.defaults.baseURL = isProduction\n  ? \"https://abhishekram404-blog-simple.herokuapp.com/api/\"\n  : \"http://localhost:4000/api/\";\n\naxios.defaults.withCredentials = true;\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <Provider store={store}>\n        <AlertProvider\n          transition={transitions.FADE}\n          position={positions.BOTTOM_LEFT}\n          template={AlertTemplate}\n          timeout={5000}\n          offset=\"30px\"\n        >\n          <App />\n        </AlertProvider>\n      </Provider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"styles/loading.scss\";\nexport default function Loading() {\n  const { dark } = useSelector((state) => state.common);\n  return (\n    <div\n      className={clsx(\"loader\", dark ? \"loader-dark\" : \"loader-light\")}\n    ></div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nexport default function Error404() {\n  const history = useHistory();\n  const goback = () => history.goBack();\n  return (\n    <div className=\"error-page\">\n      <div className=\"container\">\n        <h1>Error 404 !</h1>\n        <h4>The page that you requested was not found. </h4>\n        <button className=\"btn btn-primary mt-3\" onClick={goback}>\n          Go to previous page\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}