{"version":3,"sources":["redux/constants.js","redux/actions/commonActions.js","components/Navbar.js","components/ProtectedRoute.js","App.js","redux/reducers/alertReducer.js","redux/reducers/commonReducer.js","redux/reducers/postReducer.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js","components/Loading.js","utils/Socket.js","components/Error404.js"],"names":["TOGGLE_DARK_MODE","SEND_REGISTER_REQUEST","REGISTER_SUCCESSFUL","REGISTER_FAILED","ERROR","SUCCESS","INFO","CLEAR_ALERT","GET_AUTH_DATA","AUTHENTICATED","NOT_AUTHENTICATED","LOADING_ON","LOADING_OFF","LOGOUT","FETCH_POST_SUCCESS","FETCH_POST_FAILURE","FETCH_USER_INFO_SUCCESS","FETCH_USER_INFO_FAILURE","FETCH_PROFILE_POST_SUCCESS","FETCH_PROFILE_POST_FAILURE","CLEAR_ALL","FETCH_A_POST_SUCCESS","FETCH_A_POST_FAILURE","UPDATE_POST_VIA_SOCKET","require","Navbar","dispatch","useDispatch","useSelector","state","common","dark","isUserLoggedIn","user","useState","navExpanded","setNavExpanded","resize","window","innerWidth","useEffect","addEventListener","removeEventListener","className","clsx","to","onClick","src","alt","name","split","role","a","axios","post","data","success","type","payload","message","ProtectedRoute","Component","component","rest","render","props","Homepage","React","lazy","Post","Register","Login","CreatePost","Profile","App","alert","useAlert","alertOnClose","Boolean","Number","Cookies","get","authenticated","onClose","error","info","Socket","emit","fallback","Loading","path","exact","Error404","alertReducer","action","commonReducer","loading","postReducer","fetchedPosts","profilePosts","userPosts","visitedPosts","postIndex","findIndex","_id","post_id","newArr","likes","comments","userReducer","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","defaults","baseURL","withCredentials","ReactDOM","StrictMode","transition","transitions","FADE","position","positions","BOTTOM_LEFT","template","AlertTemplate","timeout","offset","document","getElementById","io","history","useHistory","goBack"],"mappings":"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","file":"static/js/main.66ee0aeb.chunk.js","sourcesContent":["export const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\";\nexport const SEND_REGISTER_REQUEST = \"SEND_REGISTER_REQUEST\";\nexport const REGISTER_SUCCESSFUL = \"REGISTER_SUCCESSFUL\";\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\nexport const ERROR = \"ERROR\";\nexport const SUCCESS = \"SUCCESS\";\nexport const INFO = \"INFO\";\nexport const CLEAR_ALERT = \"CLEAR_ALERT\";\nexport const GET_AUTH_DATA = \"GET_AUTH_DATA\";\nexport const AUTHENTICATED = \"AUTHENTICATED\";\nexport const NOT_AUTHENTICATED = \"NOT_AUTHENTICATED\";\nexport const LOADING_ON = \"LOADING_ON\";\nexport const LOADING_OFF = \"LOADING_OFF\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_POST_SUCCESS = \"FETCH_POST_SUCCESS\";\nexport const FETCH_POST_FAILURE = \"FETCH_POST_FAILURE\";\nexport const FETCH_USER_INFO_SUCCESS = \"FETCH_USER_INFO_SUCCESS\";\nexport const FETCH_USER_INFO_FAILURE = \"FETCH_USER_INFO_FAILURE\";\nexport const FETCH_PROFILE_POST_SUCCESS = \"FETCH_PROFILE_POST_SUCCESS\";\nexport const FETCH_PROFILE_POST_FAILURE = \"FETCH_PROFILE_POST_FAILURE\";\nexport const CLEAR_ALL = \"CLEAR_ALL\";\nexport const FETCH_A_POST_SUCCESS = \"FETCH_A_POST_SUCCESS\";\nexport const FETCH_A_POST_FAILURE = \"FETCH_A_POST_FAILURE\";\nexport const UPDATE_POST_VIA_SOCKET = \"UPDATE_POST_VIA_SOCKET\";\n","import axios from \"axios\";\n\nconst {\n  TOGGLE_DARK_MODE,\n  LOGOUT,\n  SUCCESS,\n  ERROR,\n  CLEAR_ALL,\n} = require(\"redux/constants\");\n\nexport const toggle_dark_mode = () => {\n  return {\n    type: TOGGLE_DARK_MODE,\n  };\n};\n\nexport const logout = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(\"/user/logout\");\n      switch (data.success) {\n        case true:\n          dispatch({\n            type: LOGOUT,\n          });\n          dispatch({\n            type: CLEAR_ALL,\n          });\n          dispatch({\n            type: SUCCESS,\n            payload: data.message,\n          });\n          break;\n        case false:\n          dispatch({\n            type: ERROR,\n            payload: data.message,\n          });\n          dispatch({\n            type: LOGOUT,\n          });\n          break;\n        default:\n          return;\n      }\n    } catch (error) {\n      dispatch({\n        type: ERROR,\n        message: \"Something went wrong!\",\n      });\n      dispatch({\n        type: LOGOUT,\n      });\n    }\n  };\n};\n","import clsx from \"clsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"styles/navbar.scss\";\nimport { MdDarkMode, MdLightMode } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout, toggle_dark_mode } from \"redux/actions/commonActions\";\nimport { HiOutlineMenuAlt4 } from \"react-icons/hi\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nexport default function Navbar() {\n  const dispatch = useDispatch();\n  const { dark, isUserLoggedIn } = useSelector((state) => state.common);\n  const { user } = useSelector((state) => state.user);\n  const [navExpanded, setNavExpanded] = useState(false);\n\n  const resize = () => {\n    if (window.innerWidth > 576) {\n      return setNavExpanded(true);\n    }\n    setNavExpanded(false);\n  };\n\n  useEffect(() => {\n    if (window.innerWidth > 576) {\n      setNavExpanded(true);\n    }\n    window.addEventListener(\"resize\", resize);\n\n    return () => {\n      window.removeEventListener(\"resize\", null);\n    };\n  }, []);\n  return (\n    <div\n      className={clsx(\n        \"navbar px-1 px-md-4 py-2\",\n        dark ? \"navbar_dark\" : \"navbar_light\"\n      )}\n    >\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Blog\n        </Link>\n        <button\n          className=\"menu-btn btn d-sm-none\"\n          onClick={() => setNavExpanded(!navExpanded)}\n        >\n          <HiOutlineMenuAlt4 className=\"menu-btn-icon\" />\n        </button>\n        {navExpanded && (\n          <ul\n            className={clsx(\n              \"navbar-nav  flex-row align-items-center\",\n              navExpanded && \"expanded\"\n            )}\n          >\n            {isUserLoggedIn ? (\n              <>\n                <li className=\"nav-item me-3\">\n                  <Link\n                    to=\"/create-post\"\n                    className=\"cta nav-link btn btn-primary px-2\"\n                  >\n                    Create post\n                  </Link>\n                </li>\n                <li className=\"nav-item me-3\">\n                  <Link to=\"/profile\" className=\"nav-link p-2 profile-link\">\n                    <img\n                      src=\"https://avatars.dicebear.com/api/male/john.svg?mood[]=happy\"\n                      alt=\"\"\n                    />\n                    <span>{user?.name ? user.name.split(\" \")[0] : null}</span>\n                  </Link>\n                </li>\n                <li\n                  className=\"nav-item me-3\"\n                  role=\"button\"\n                  onClick={() => dispatch(logout())}\n                >\n                  <button className=\"nav-link btn btn-link  px-2\">\n                    Logout\n                  </button>\n                </li>\n              </>\n            ) : (\n              <>\n                <li className=\"nav-item me-3\">\n                  <Link to=\"/login\" className=\"nav-link btn btn-link px-2\">\n                    Login\n                  </Link>\n                </li>\n                <li className=\"nav-item me-3\">\n                  <Link\n                    to=\"/register\"\n                    className=\"cta nav-link btn btn-primary  px-2\"\n                  >\n                    Register\n                  </Link>\n                </li>\n              </>\n            )}\n            <li\n              className=\"nav-item  dark-mode-switch\"\n              // role=\"button\"\n              onClick={() => dispatch(toggle_dark_mode())}\n            >\n              {dark ? (\n                <MdLightMode className=\"icon\" />\n              ) : (\n                <MdDarkMode className=\"icon\" />\n              )}\n            </li>\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n// import { LOADING_OFF, LOADING_ON } from \"redux/constants\";\n\nexport default function ProtectedRoute({ component: Component, ...rest }) {\n  // const dispatch = useDispatch();\n  const { isUserLoggedIn } = useSelector((state) => state.common);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isUserLoggedIn ? <Redirect to=\"/login\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n","import React, { Suspense, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./components/Navbar\";\nimport ProtectedRoute from \"components/ProtectedRoute\";\nimport clsx from \"clsx\";\nimport \"styles/app.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport {\n  INFO,\n  CLEAR_ALERT,\n  ERROR,\n  SUCCESS,\n  AUTHENTICATED,\n  NOT_AUTHENTICATED,\n} from \"redux/constants\";\nimport Cookies from \"js-cookie\";\nimport Loading from \"components/Loading\";\nimport Error404 from \"components/Error404\";\nimport Socket from \"utils/Socket\";\nconst Homepage = React.lazy(() => import(\"components/Homepage\"));\nconst Post = React.lazy(() => import(\"components/Post\"));\nconst Register = React.lazy(() => import(\"components/Register\"));\nconst Login = React.lazy(() => import(\"components/Login\"));\nconst CreatePost = React.lazy(() => import(\"components/CreatePost\"));\nconst Profile = React.lazy(() => import(\"components/Profile\"));\nfunction App() {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { dark } = useSelector((state) => state.common);\n  const { type, message } = useSelector((state) => state.alert);\n  const alertOnClose = () => {\n    dispatch({ type: CLEAR_ALERT });\n  };\n\n  const [authenticated, setAuthenticated] = useState(() =>\n    Boolean(Number(Cookies.get(\"isUserLoggedIn\")))\n  );\n  useEffect(() => {\n    if (!authenticated) {\n      return dispatch({\n        type: NOT_AUTHENTICATED,\n        // type: AUTHENTICATED,\n      });\n    } else {\n      return dispatch({\n        type: AUTHENTICATED,\n      });\n    }\n  }, [authenticated]);\n\n  useEffect(() => {\n    switch (type) {\n      case SUCCESS:\n        alert.success(message, {\n          onClose: alertOnClose,\n        });\n        break;\n      case ERROR:\n        alert.error(message, {\n          onClose: alertOnClose,\n        });\n        break;\n      case INFO:\n        alert.info(message, {\n          onClose: alertOnClose,\n        });\n        break;\n      default:\n        break;\n    }\n  }, [type, message]);\n\n  const isProduction = process.env.REACT_APP_NODE_ENV === \"production\";\n\n  useEffect(() => {\n    Socket.emit(\"connection\");\n  }, []);\n\n  return (\n    <Router>\n      <div className={clsx(\"app\", dark ? \"app_dark\" : \"app_light\")}>\n        <Navbar />\n\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Homepage} />\n            <Route path=\"/post/:id\" component={Post} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n            <ProtectedRoute path=\"/create-post\" component={CreatePost} />\n            <ProtectedRoute path=\"/profile\" component={Profile} />\n            <Route path=\"*\" component={Error404} />\n          </Switch>\n        </Suspense>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { CLEAR_ALERT, ERROR, INFO, SUCCESS } from \"redux/constants\";\n\nconst alertReducer = (state = { type: null, message: null }, action) => {\n  switch (action.type) {\n    case ERROR:\n      return {\n        ...state,\n        type: ERROR,\n        message: action.payload,\n      };\n    case INFO:\n      return {\n        ...state,\n        type: INFO,\n        message: action.payload,\n      };\n    case SUCCESS:\n      return {\n        ...state,\n        type: SUCCESS,\n        message: action.payload,\n      };\n    case CLEAR_ALERT:\n      return {\n        type: null,\n        message: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default alertReducer;\n","const {\n  TOGGLE_DARK_MODE,\n  AUTHENTICATED,\n  NOT_AUTHENTICATED,\n  LOADING_ON,\n  LOADING_OFF,\n  LOGOUT,\n} = require(\"redux/constants\");\n\nconst commonReducer = (\n  state = { dark: false, isUserLoggedIn: null },\n  action\n) => {\n  switch (action.type) {\n    case TOGGLE_DARK_MODE:\n      return {\n        ...state,\n        dark: !state.dark,\n      };\n    case LOADING_ON:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LOADING_OFF:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case AUTHENTICATED:\n      return {\n        ...state,\n        isUserLoggedIn: true,\n      };\n\n    case NOT_AUTHENTICATED:\n      return {\n        ...state,\n        isUserLoggedIn: false,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isUserLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default commonReducer;\n","const {\n  FETCH_POST_SUCCESS,\n  FETCH_POST_FAILURE,\n  FETCH_PROFILE_POST_SUCCESS,\n  FETCH_PROFILE_POST_FAILURE,\n  CLEAR_ALL,\n  FETCH_A_POST_SUCCESS,\n  UPDATE_POST_VIA_SOCKET,\n} = require(\"redux/constants\");\n\nconst postReducer = (\n  state = {\n    fetchedPosts: [],\n    profilePosts: [],\n    userPosts: [],\n    visitedPosts: [],\n  },\n  action\n) => {\n  switch (action.type) {\n    case CLEAR_ALL:\n      return {\n        fetchedPosts: [],\n        profilePosts: [],\n        userPosts: [],\n        visitedPosts: [],\n      };\n    case FETCH_POST_SUCCESS:\n      return {\n        ...state,\n        fetchedPosts: [\n          // ...state.fetchedPosts,\n          ...action.payload,\n        ],\n      };\n    case FETCH_POST_FAILURE:\n      return state;\n    case FETCH_PROFILE_POST_SUCCESS:\n      return {\n        ...state,\n        profilePosts: [\n          // ...state.profilePosts,\n          ...action.payload,\n        ],\n      };\n    case FETCH_PROFILE_POST_FAILURE:\n      return state;\n    case FETCH_A_POST_SUCCESS:\n      return {\n        ...state,\n        visitedPosts: [...state.visitedPosts, action.payload],\n      };\n    case UPDATE_POST_VIA_SOCKET:\n      const postIndex = state.fetchedPosts.findIndex(\n        (post) => post._id === action.payload.post_id\n      );\n      let newArr = [...state.fetchedPosts];\n      newArr[postIndex].likes = action.payload.likes;\n      newArr[postIndex].comments = action.payload.comments;\n      return {\n        ...state,\n        fetchedPosts: newArr,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","const {\n  FETCH_USER_INFO_SUCCESS,\n  FETCH_USER_INFO_FAILURE,\n  CLEAR_ALL,\n} = require(\"redux/constants\");\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CLEAR_ALL:\n      return {};\n    case FETCH_USER_INFO_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case FETCH_USER_INFO_FAILURE:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport alertReducer from \"./alertReducer\";\nimport commonReducer from \"./commonReducer\";\nimport postReducer from \"./postReducer\";\nimport userReducer from \"./userReducer\";\n\nconst rootReducer = combineReducers({\n  common: commonReducer,\n  alert: alertReducer,\n  post: postReducer,\n  user: userReducer,\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"redux/reducers/rootReducer\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\nimport axios from \"axios\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nconst isProduction = process.env.REACT_APP_NODE_ENV === \"production\";\n\naxios.defaults.baseURL = isProduction\n  ? \"https://abhishekram404-blog.herokuapp.com/api/\"\n  : \"http://localhost:4000/api/\";\n\naxios.defaults.withCredentials = true;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AlertProvider\n        transition={transitions.FADE}\n        position={positions.BOTTOM_LEFT}\n        template={AlertTemplate}\n        timeout={5000}\n        offset=\"30px\"\n      >\n        <App />\n      </AlertProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"styles/loading.scss\";\nexport default function Loading() {\n  const { dark } = useSelector((state) => state.common);\n  return (\n    <div\n      className={clsx(\"loader\", dark ? \"loader-dark\" : \"loader-light\")}\n    ></div>\n  );\n}\n","import io from \"socket.io-client\";\n\nconst isProduction = process.env.REACT_APP_NODE_ENV === \"production\";\n\nexport default io(!isProduction && \"http://localhost:4000\");\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nexport default function Error404() {\n  const history = useHistory();\n  const goback = () => history.goBack();\n  return (\n    <div className=\"error-page\">\n      <div className=\"container\">\n        <h1>Error 404 !</h1>\n        <h4>The page that you requested was not found. </h4>\n        <button className=\"btn btn-primary mt-3\" onClick={goback}>\n          Go to previous page\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}