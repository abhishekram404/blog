{"version":3,"sources":["../node_modules/webpack/buildin/module.js","history.js","components/Login.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","history","createBrowserHistory","Login","props","useState","isSubmitting","setSubmitting","dispatch","useDispatch","useSelector","state","common","dark","isUserLoggedIn","loginSchema","Yup","email","required","password","loginMutation","useMutation","v","a","axios","post","onSuccess","data","type","AUTHENTICATED","SUCCESS","payload","message","onError","error","console","log","NOT_AUTHENTICATED","ERROR","response","handleSubmit","values","mutateAsync","to","className","clsx","initialValues","validationSchema","onSubmit","errors","touched","htmlFor","name"],"mappings":"gFAAAA,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF,I,kgCClBD,IAEQY,E,qkDAFQC,G,OCcR,SAASC,EAAMC,GAC5B,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAWC,cACjB,EAAiCC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAtDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,eACRC,EAAcC,IAAW,CAC7BC,MAAOD,MAAaC,MAAM,iBAAiBC,SAAS,YACpDC,SAAUH,MAAaE,SAAS,cAI5BE,EAAgBC,sBAAW,uCAC/B,WAAOC,GAAP,SAAAC,EAAA,sEAAmBC,IAAMC,KAAK,cAAeH,GAA7C,mFAD+B,sDAE/B,CACEI,UAAW,YAAe,IAAZC,EAAW,EAAXA,KAGZ,OAFApB,GAAc,GACdC,EAAS,CAAEoB,KAAMC,kBACVrB,EAAS,CACdoB,KAAME,UACNC,QAASJ,EAAKK,WAGlBC,QAAS,SAACC,GAIR,OAHAC,QAAQC,IAAIF,GACZ3B,GAAc,GACdC,EAAS,CAAEoB,KAAMS,sBACV7B,EAAS,CACdoB,KAAMU,QACNP,QAASG,EAAMK,SAASZ,KAAKK,aAK/BQ,EAAY,uCAAG,WAAOC,GAAP,SAAAlB,EAAA,6DACnBhB,GAAc,GADK,SAEba,EAAcsB,YAAYD,GAFb,2CAAH,sDAOlB,OAFAN,QAAQC,IAAInC,GAERa,EACK,cAAC,IAAD,CAAU6B,GAAG,MAKpB,qBACEC,UAAWC,YACT,4BACAhC,EAAO,gBAAkB,kBAH7B,SAME,qBAAK+B,UAAU,YAAf,SACE,cAAC,IAAD,CACEE,cA5Cc,CAAE7B,MAAO,GAAIE,SAAU,IA6CrC4B,iBAAkBhC,EAClBiC,SAAUR,EAHZ,SAKG,SAACS,EAAQC,GAAT,OACC,eAAC,IAAD,CAAMN,UAAWC,YAAK,WAAYvC,GAAgB,YAAlD,UACE,oBAAIsC,UAAU,cAAd,mBAEA,sBAAKA,UAAU,OAAf,UACE,wBAAOO,QAAQ,QAAQP,UAAU,aAAjC,mBACQ,sBAAMA,UAAU,cAAhB,kBAER,cAAC,IAAD,CACEQ,KAAK,QACLxB,KAAK,QACLgB,UAAU,2BACV1B,UAAU,IAEZ,uBAAO0B,UAAU,4BAAjB,SACE,cAAC,IAAD,CAAcQ,KAAK,eAGvB,sBAAKR,UAAU,OAAf,UACE,wBAAOO,QAAQ,WAAWP,UAAU,aAApC,sBACW,sBAAMA,UAAU,cAAhB,kBAEX,cAAC,IAAD,CACEhB,KAAK,WACLwB,KAAK,WACLR,UAAU,2BACV1B,UAAU,IAEZ,uBAAO0B,UAAU,4BAAjB,SACE,cAAC,IAAD,CAAcQ,KAAK,kBAIvB,wBAAQxB,KAAK,SAASgB,UAAU,6BAAhC,SACGtC,EAAe,aAAe","file":"static/js/12.0eafdb68.chunk.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n\nexport default history;\n","import React, { useState } from \"react\";\nimport \"styles/register.scss\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport {\n  AUTHENTICATED,\n  NOT_AUTHENTICATED,\n  ERROR,\n  SUCCESS,\n} from \"redux/constants\";\nimport { Redirect } from \"react-router\";\nimport { useMutation } from \"react-query\";\nimport history from \"../history\";\nexport default function Login(props) {\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const dispatch = useDispatch();\n  const { dark, isUserLoggedIn } = useSelector((state) => state.common);\n  const loginSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n    password: Yup.string().required(\"Required\"),\n  });\n\n  const initialValues = { email: \"\", password: \"\" };\n  const loginMutation = useMutation(\n    async (v) => await axios.post(\"/user/login\", v),\n    {\n      onSuccess: ({ data }) => {\n        setSubmitting(false);\n        dispatch({ type: AUTHENTICATED });\n        return dispatch({\n          type: SUCCESS,\n          payload: data.message,\n        });\n      },\n      onError: (error) => {\n        console.log(error);\n        setSubmitting(false);\n        dispatch({ type: NOT_AUTHENTICATED });\n        return dispatch({\n          type: ERROR,\n          payload: error.response.data.message,\n        });\n      },\n    }\n  );\n  const handleSubmit = async (values) => {\n    setSubmitting(true);\n    await loginMutation.mutateAsync(values);\n  };\n\n  console.log(history);\n\n  if (isUserLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n  // else render login page\n\n  return (\n    <div\n      className={clsx(\n        \"register py-4 px-1 p-md-4\",\n        dark ? \"register_dark\" : \"register_light\"\n      )}\n    >\n      <div className=\"container\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={loginSchema}\n          onSubmit={handleSubmit}\n        >\n          {(errors, touched) => (\n            <Form className={clsx(\"card p-4\", isSubmitting && \"disabled\")}>\n              <h2 className=\"text-center\">Login</h2>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"email\" className=\"form-label\">\n                  Email <span className=\"text-danger\">*</span>\n                </label>\n                <Field\n                  name=\"email\"\n                  type=\"email\"\n                  className=\"form-control shadow-none\"\n                  required={true}\n                />\n                <small className=\"error-message text-danger\">\n                  <ErrorMessage name=\"email\" />\n                </small>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"password\" className=\"form-label\">\n                  Password <span className=\"text-danger\">*</span>\n                </label>\n                <Field\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"form-control shadow-none\"\n                  required={true}\n                />\n                <small className=\"error-message text-danger\">\n                  <ErrorMessage name=\"password\" />\n                </small>\n              </div>\n\n              <button type=\"submit\" className=\"submit-btn btn btn-primary\">\n                {isSubmitting ? \"Logging In\" : \"Login\"}\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}