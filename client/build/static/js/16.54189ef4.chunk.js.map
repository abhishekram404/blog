{"version":3,"sources":["components/EditProfile.js"],"names":["EditProfile","dark","useSelector","state","common","dispatch","useDispatch","schema","Yup","name","min","max","required","username","bio","email","dob","address","initialValues","useQuery","axios","get","data","isLoading","isError","isSuccess","error","console","log","response","Object","keys","details","map","key","a","hasOwnProperty","assign","moment","format","mutation","useMutation","v","put","onSuccess","type","SUCCESS","payload","message","onError","className","clsx","validationSchema","onSubmit","values","mutate","handleSubmit","props","htmlFor","to","disabled","isValid"],"mappings":"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","file":"static/js/16.54189ef4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport \"styles/editProfile.scss\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Loading from \"./Loading\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { SUCCESS } from \"redux/constants\";\nexport default function EditProfile() {\n  const { dark } = useSelector((state) => state.common);\n  const dispatch = useDispatch();\n  const schema = Yup.object({\n    name: Yup.string()\n      .min(3, \"Name must be at least 3 characters long.\")\n      .max(60, \"Name must be maximum 30 characters long.\")\n      .required(\"Name is required.\"),\n    username: Yup.string()\n      .min(3, \"Username must be minimum 3 characters long.\")\n      .max(30, \"Username must be maximum 30 characters long.\")\n      .required(\"Username is required.\"),\n    bio: Yup.string().max(200, \"Bio must be maximum 200 characters long.\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required.\"),\n    dob: Yup.date(),\n    address: Yup.string(),\n  });\n\n  let initialValues = {\n    name: \"\",\n    username: \"\",\n    bio: \"\",\n    email: \"\",\n    dob: \"\",\n    address: \"\",\n  };\n\n  let { data, isLoading, isError, isSuccess, error } = useQuery(\n    \"profileInfo\",\n    () => axios.get(\"/user/fetchUserInfo\")\n  );\n\n  if (isError) {\n    console.log(error.response);\n  }\n\n  if (isSuccess) {\n    Object.keys(data.data.details).map(async (key) => {\n      if (!initialValues.hasOwnProperty(key)) {\n        delete data.data.details[key];\n      }\n    });\n    initialValues = Object.assign({}, initialValues, data.data.details, {\n      dob: data.data.details.dob\n        ? moment(data.data.details.dob).format(\"YYYY-MM-DD\")\n        : \"\",\n    });\n  }\n\n  const mutation = useMutation(\n    async (v) => await axios.put(\"/user/update\", v),\n    {\n      onSuccess: ({ data }) => {\n        return dispatch({\n          type: SUCCESS,\n          payload: data.message,\n        });\n      },\n      onError: (error) => console.log(error),\n    }\n  );\n\n  const handleSubmit = (values) => {\n    mutation.mutate(values);\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <div\n      className={clsx(\n        \"edit-profile  px-1 px-md-4 py-4\",\n        dark ? \"edit-profile-dark\" : \"edit-profile-light\"\n      )}\n    >\n      <div className=\"container\">\n        <Formik\n          validationSchema={schema}\n          initialValues={initialValues}\n          onSubmit={(values) => handleSubmit(values)}\n        >\n          {(props) => (\n            <Form className=\"card p-4\">\n              <h2>Edit profile</h2>\n              <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label\">\n                  Name\n                </label>\n                <Field className=\"form-control\" name=\"name\" />\n                <small className=\"error-msg text-danger\">\n                  <ErrorMessage name=\"name\" />\n                </small>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"username\" className=\"form-label\">\n                  Username\n                </label>\n                <Field className=\"form-control\" name=\"username\" />\n                <small className=\"error-msg text-danger\">\n                  <ErrorMessage name=\"username\" />\n                </small>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"bio\" className=\"form-label\">\n                  Bio\n                </label>\n                <Field className=\"form-control\" name=\"bio\" />\n                <small className=\"error-msg text-danger\">\n                  <ErrorMessage name=\"bio\" />\n                </small>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"email\" className=\"form-label\">\n                  Email\n                </label>\n                <Field className=\"form-control\" name=\"email\" type=\"email\" />\n                <small className=\"error-msg text-danger\">\n                  <ErrorMessage name=\"email\" />\n                </small>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"dob\" className=\"form-label\">\n                  Date of birth\n                </label>\n                <Field className=\"form-control\" name=\"dob\" type=\"date\" />\n                <small className=\"error-msg text-danger\">\n                  <ErrorMessage name=\"dob\" />\n                </small>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"address\" className=\"form-label\">\n                  Address\n                </label>\n                <Field className=\"form-control\" name=\"address\" />\n                <small className=\"error-msg text-danger\">\n                  <ErrorMessage name=\"address\" />\n                </small>\n              </div>\n              <div className=\"\">\n                <Link className=\"btn me-2 cancel-btn\" to=\"/profile\">\n                  Cancel\n                </Link>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary submit-btn\"\n                  disabled={!props.isValid}\n                >\n                  Update\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}