{"version":3,"sources":["components/CreatePost.js"],"names":["CKEditor","React","lazy","Post","withRouter","dispatch","useDispatch","history","useHistory","dark","useSelector","state","common","user","useState","tags","setTags","previewMode","setPreviewMode","title","category","content","formData","setFormData","validatonSchema","Yup","required","KeyCodes","delimiters","handleAdd","tag","pascalCase","text","some","tagText","id","handleDelete","indexToRemove","filter","_","i","debounce","useCallback","db","value","Object","assign","generatePreviewData","values","tagsList","forEach","tagObj","push","authorId","_id","authorName","name","authorUsername","username","handleSubmit","props","a","axios","post","data","success","message","resetForm","type","SUCCESS","payload","ERROR","INFO","response","handleDraftSubmit","className","clsx","onClick","fallback","body","preview","initialValues","onSubmit","validationSchema","onBlur","as","onKeyDown","e","parseInt","target","style","height","scrollHeight","placeholder","htmlFor","autofocus","handleAddition","inputFieldPosition","allowUnique","classNames","tagInput","tagInputField","remove","activeClass","events","change","editor","getData","config","removeButtons","disabled","isValid"],"mappings":"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","file":"static/js/15.cf5df40c.chunk.js","sourcesContent":["import React, { useState, useCallback, Suspense } from \"react\";\nimport clsx from \"clsx\";\nimport \"styles/createPost.scss\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\nimport { pascalCase } from \"change-case\";\nimport { useSelector } from \"react-redux\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { debounce as db } from \"lodash\";\nimport { AiOutlineEye } from \"react-icons/ai\";\nimport { IoCreateOutline } from \"react-icons/io5\";\nimport Loading from \"./Loading\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { ERROR, INFO, SUCCESS } from \"redux/constants\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nconst CKEditor = React.lazy(() => import(\"react-ckeditor-component\"));\nconst Post = React.lazy(() => import(\"./Post\"));\nfunction CreatePost() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { dark } = useSelector((state) => state.common);\n  const { user } = useSelector((state) => state.user);\n  const [tags, setTags] = useState([]);\n  const [previewMode, setPreviewMode] = useState(false);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    category: \"Undefined\",\n    tags: [],\n    content: \"\",\n  });\n  const validatonSchema = Yup.object({\n    title: Yup.string().required(\"Post title is required.\"),\n    category: Yup.string(),\n    tags: Yup.array(),\n    content: Yup.string(),\n  });\n\n  const KeyCodes = {\n    comma: 188,\n    enter: [10, 13],\n  };\n  const delimiters = [...KeyCodes.enter, KeyCodes.comma];\n  const handleAdd = (tag) => {\n    tag = pascalCase(tag.text);\n    if (!tag) {\n      return;\n    }\n    if (tags.some((tagText) => tagText.text === tag)) {\n      return;\n    }\n    setTags([...tags, { id: tag, text: tag }]);\n  };\n  const handleDelete = (indexToRemove) => {\n    setTags(() => tags.filter((_, i) => indexToRemove !== i));\n  };\n\n  const debounce = useCallback(\n    db((value) => {\n      setFormData(Object.assign(formData, { content: value }));\n    }, 300),\n    []\n  );\n\n  const generatePreviewData = (values) => {\n    let tagsList = [];\n    tags.forEach((tagObj) => {\n      tagsList.push(tagObj.id);\n    });\n    setFormData(\n      Object.assign(\n        formData,\n        { title: values.title, category: values.category },\n        { tags: tagsList },\n        {\n          authorId: user._id,\n          authorName: user.name,\n          authorUsername: user.username,\n        }\n      )\n    );\n  };\n\n  const handleSubmit = async (values, props) => {\n    try {\n      await generatePreviewData(values);\n      const { data } = await axios.post(\n        \"/post/create-post?submitType=publish\",\n        formData\n      );\n\n      const { success, message } = await data;\n      switch (success) {\n        case true:\n          props.resetForm();\n          setFormData({\n            title: \"\",\n            category: \"\",\n            tags: [],\n            content: \"\",\n          });\n\n          dispatch({\n            type: SUCCESS,\n            payload: message,\n          });\n\n          history.push(\"/\");\n          return;\n        case false:\n          return dispatch({\n            type: ERROR,\n            payload: message,\n          });\n        default:\n          return dispatch({\n            type: INFO,\n            payload: message,\n          });\n      }\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error?.response?.data.message,\n      });\n    }\n  };\n\n  const handleDraftSubmit = async (props) => {\n    try {\n      await generatePreviewData(props.values);\n      const { data } = await axios.post(\n        \"/post/create-post?submitType=draft\",\n        formData\n      );\n      const { success, message } = await data;\n      switch (success) {\n        case true:\n          props.resetForm();\n          setFormData({\n            title: \"\",\n            category: \"\",\n            tags: [],\n            content: \"\",\n          });\n          dispatch({\n            type: SUCCESS,\n            payload: message,\n          });\n          history.push(\"/\");\n          return;\n        case false:\n          return dispatch({\n            type: ERROR,\n            payload: message,\n          });\n        default:\n          return dispatch({\n            type: INFO,\n            payload: message,\n          });\n      }\n    } catch (error) {\n      return dispatch({\n        type: ERROR,\n        payload: error?.response?.data.message,\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(\n        \"create_post py-4 p-2 p-sm-4\",\n        dark ? \"create_post_dark\" : \"create_post_light\"\n      )}\n    >\n      <div className=\"container\">\n        <div className=\"row mb-2 align-items-center\">\n          <div className=\"col-8 col-sm-9\">\n            <h2>{previewMode ? \"Preview mode\" : \"Create a post\"}</h2>\n          </div>\n          <div className=\"col-4 col-sm-3 preview-btn \">\n            <button\n              className=\"btn btn-sm  ms-auto shadow-none\"\n              onClick={() => setPreviewMode(!previewMode)}\n            >\n              {previewMode ? (\n                <>\n                  Edit <IoCreateOutline />\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  Preview <AiOutlineEye />\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n        {previewMode ? (\n          <Suspense fallback={<Loading />}>\n            <Post\n              title={formData.title}\n              category={formData.category}\n              body={formData.content}\n              preview={true}\n            />\n          </Suspense>\n        ) : (\n          <Formik\n            initialValues={formData}\n            onSubmit={handleSubmit}\n            validationSchema={validatonSchema}\n          >\n            {(props) => (\n              <Form\n                className=\"p-3\"\n                onBlur={() => generatePreviewData(props.values)}\n              >\n                <div className=\"mb-3\">\n                  <Field\n                    as=\"textarea\"\n                    onKeyDown={(e) => {\n                      if (parseInt(e.target.style.height) >= 300) {\n                        return;\n                      }\n                      e.target.style.height = \"inherit\";\n                      e.target.style.height = `${e.target.scrollHeight}px`;\n                    }}\n                    name=\"title\"\n                    className=\"form-control shadow-none post-title\"\n                    placeholder=\"New post title here\"\n                  />\n                  <small className=\"text-danger\">\n                    <ErrorMessage name=\"title\" />\n                  </small>\n                </div>\n                <div className=\"mb-3 tags-cont\">\n                  <label htmlFor=\"post-tags\" className=\"form-label\">\n                    Tags\n                  </label>\n                  <ReactTags\n                    tags={tags}\n                    autofocus={false}\n                    handleAddition={handleAdd}\n                    handleDelete={handleDelete}\n                    delimiters={delimiters}\n                    inputFieldPosition=\"inline\"\n                    allowUnique={false}\n                    classNames={{\n                      tags: \"tags\",\n                      tag: \"tag\",\n                      tagInput: \"tagInput\",\n                      tagInputField: \"tagInputField\",\n                      remove: \"tagRemoveBtn\",\n                    }}\n                  />\n                </div>\n                <div className=\"mb-3 category-cont\">\n                  <label htmlFor=\"category\" className=\"form-label\">\n                    Category\n                  </label>\n                  <Field\n                    as=\"select\"\n                    name=\"category\"\n                    id=\"category\"\n                    className=\"form-control shadow-none\"\n                  >\n                    <option value=\"Undefined\">Undefined</option>\n                    <option value=\"Crime\">Crime</option>\n                    <option value=\"Food\">Food</option>\n                    <option value=\"Travel\">Travel</option>\n                    <option value=\"Fashion\">Fashion</option>\n                    <option value=\"DIY\">DIY</option>\n                    <option value=\"Music\">Music</option>\n                    <option value=\"Sports\">Sports</option>\n                    <option value=\"E-sports\">E-sports</option>\n                    <option value=\"Fitness\">Fitness</option>\n                    <option value=\"Business\">Business</option>\n                    <option value=\"Politics\">Politics</option>\n                    <option value=\"Movie\">Movie</option>\n                    <option value=\"Science\">Science</option>\n                    <option value=\"Technology\">Technology</option>\n                    <option value=\"News\">News</option>\n                  </Field>\n                </div>\n                <div className=\"editor-cont mb-3\">\n                  <label htmlFor=\"post-body\" className=\"form-label\">\n                    Body\n                  </label>\n\n                  <Suspense fallback={<Loading />}>\n                    <CKEditor\n                      content={formData.content}\n                      activeClass=\"editor\"\n                      events={{\n                        change: (e) => debounce(e.editor.getData()),\n                      }}\n                      config={{\n                        removeButtons:\n                          \"Cut,Copy,Paste,Anchor,Scayt,PasteText,PasteFromWord,About\",\n                      }}\n                    />\n                  </Suspense>\n                </div>\n                <div className=\"d-flex justify-content-end\">\n                  <button\n                    className=\"btn btn-secondary shadow-none me-3\"\n                    onClick={() => {\n                      handleDraftSubmit(props);\n                    }}\n                    type=\"button\"\n                  >\n                    Save draft\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary  shadow-none\"\n                    disabled={!props.isValid}\n                  >\n                    Post\n                  </button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(CreatePost);\n"],"sourceRoot":""}