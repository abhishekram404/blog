{"version":3,"sources":["components/Loading.js","components/Error404.js","redux/constants.js","redux/actions/commonActions.js","components/Navbar.js","components/ProtectedRoute.js","App.js","redux/reducers/alertReducer.js","redux/reducers/commonReducer.js","redux/reducers/postReducer.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["Loading","dark","useSelector","state","common","className","clsx","Error404","history","useHistory","onClick","goBack","TOGGLE_DARK_MODE","SEND_REGISTER_REQUEST","REGISTER_SUCCESSFUL","REGISTER_FAILED","ERROR","SUCCESS","INFO","CLEAR_ALERT","GET_AUTH_DATA","AUTHENTICATED","NOT_AUTHENTICATED","LOADING_ON","LOADING_OFF","LOGOUT","FETCH_POST_SUCCESS","FETCH_POST_FAILURE","FETCH_USER_INFO_SUCCESS","FETCH_USER_INFO_FAILURE","FETCH_PROFILE_POST_SUCCESS","FETCH_PROFILE_POST_FAILURE","CLEAR_ALL","require","Navbar","dispatch","useDispatch","isUserLoggedIn","user","useState","navExpanded","setNavExpanded","resize","window","innerWidth","useEffect","addEventListener","removeEventListener","to","src","alt","name","split","role","a","axios","post","data","success","type","payload","message","ProtectedRoute","Component","component","rest","render","props","Homepage","React","lazy","Post","Register","Login","CreatePost","Profile","App","alert","useAlert","alertOnClose","Boolean","Number","Cookies","get","authenticated","onClose","error","info","fallback","path","exact","alertReducer","action","commonReducer","loading","postReducer","fetchedPosts","profilePosts","userPosts","userReducer","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","isProduction","process","REACT_APP_NODE_ENV","defaults","baseURL","withCredentials","ReactDOM","StrictMode","transition","transitions","FADE","position","positions","BOTTOM_LEFT","template","AlertTemplate","timeout","offset","document","getElementById"],"mappings":"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","file":"static/js/main.a89bfb74.chunk.js","sourcesContent":["import clsx from \"clsx\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"styles/loading.scss\";\nexport default function Loading() {\n  const { dark } = useSelector((state) => state.common);\n  return (\n    <div\n      className={clsx(\"loader\", dark ? \"loader-dark\" : \"loader-light\")}\n    ></div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nexport default function Error404() {\n  const history = useHistory();\n  const goback = () => history.goBack();\n  return (\n    <div className=\"error-page\">\n      <div className=\"container\">\n        <h1>Error 404 !</h1>\n        <h4>The page that you requested was not found. </h4>\n        <button className=\"btn btn-primary mt-3\" onClick={goback}>\n          Go to previous page\n        </button>\n      </div>\n    </div>\n  );\n}\n","export const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\";\nexport const SEND_REGISTER_REQUEST = \"SEND_REGISTER_REQUEST\";\nexport const REGISTER_SUCCESSFUL = \"REGISTER_SUCCESSFUL\";\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\nexport const ERROR = \"ERROR\";\nexport const SUCCESS = \"SUCCESS\";\nexport const INFO = \"INFO\";\nexport const CLEAR_ALERT = \"CLEAR_ALERT\";\nexport const GET_AUTH_DATA = \"GET_AUTH_DATA\";\nexport const AUTHENTICATED = \"AUTHENTICATED\";\nexport const NOT_AUTHENTICATED = \"NOT_AUTHENTICATED\";\nexport const LOADING_ON = \"LOADING_ON\";\nexport const LOADING_OFF = \"LOADING_OFF\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_POST_SUCCESS = \"FETCH_POST_SUCCESS\";\nexport const FETCH_POST_FAILURE = \"FETCH_POST_FAILURE\";\nexport const FETCH_USER_INFO_SUCCESS = \"FETCH_USER_INFO_SUCCESS\";\nexport const FETCH_USER_INFO_FAILURE = \"FETCH_USER_INFO_FAILURE\";\nexport const FETCH_PROFILE_POST_SUCCESS = \"FETCH_PROFILE_POST_SUCCESS\";\nexport const FETCH_PROFILE_POST_FAILURE = \"FETCH_PROFILE_POST_FAILURE\";\nexport const CLEAR_ALL = \"CLEAR_ALL\";\n","import axios from \"axios\";\n\nconst {\n  TOGGLE_DARK_MODE,\n  LOGOUT,\n  SUCCESS,\n  ERROR,\n  CLEAR_ALL,\n} = require(\"redux/constants\");\n\nexport const toggle_dark_mode = () => {\n  return {\n    type: TOGGLE_DARK_MODE,\n  };\n};\n\nexport const logout = () => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.post(\"/user/logout\");\n      switch (data.success) {\n        case true:\n          dispatch({\n            type: LOGOUT,\n          });\n          dispatch({\n            type: CLEAR_ALL,\n          });\n          dispatch({\n            type: SUCCESS,\n            payload: data.message,\n          });\n          break;\n        case false:\n          dispatch({\n            type: ERROR,\n            payload: data.message,\n          });\n          dispatch({\n            type: LOGOUT,\n          });\n          break;\n        default:\n          return;\n      }\n    } catch (error) {\n      dispatch({\n        type: ERROR,\n        message: \"Something went wrong!\",\n      });\n      dispatch({\n        type: LOGOUT,\n      });\n    }\n  };\n};\n","import clsx from \"clsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"styles/navbar.scss\";\nimport { MdDarkMode, MdLightMode } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout, toggle_dark_mode } from \"redux/actions/commonActions\";\nimport { HiOutlineMenuAlt4 } from \"react-icons/hi\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nexport default function Navbar() {\n  const dispatch = useDispatch();\n  const { dark, isUserLoggedIn } = useSelector((state) => state.common);\n  const { user } = useSelector((state) => state.user);\n  const [navExpanded, setNavExpanded] = useState(false);\n\n  const resize = () => {\n    if (window.innerWidth > 576) {\n      return setNavExpanded(true);\n    }\n    setNavExpanded(false);\n  };\n\n  useEffect(() => {\n    if (window.innerWidth > 576) {\n      setNavExpanded(true);\n    }\n    window.addEventListener(\"resize\", resize);\n\n    return () => {\n      window.removeEventListener(\"resize\", null);\n    };\n  }, []);\n  return (\n    <div\n      className={clsx(\n        \"navbar px-1 px-md-4 py-2\",\n        dark ? \"navbar_dark\" : \"navbar_light\"\n      )}\n    >\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Blog\n        </Link>\n        <button\n          className=\"menu-btn btn d-sm-none\"\n          onClick={() => setNavExpanded(!navExpanded)}\n        >\n          <HiOutlineMenuAlt4 className=\"menu-btn-icon\" />\n        </button>\n        {navExpanded && (\n          <ul\n            className={clsx(\n              \"navbar-nav  flex-row align-items-center\",\n              navExpanded && \"expanded\"\n            )}\n          >\n            {isUserLoggedIn ? (\n              <>\n                <li className=\"nav-item me-3\">\n                  <Link\n                    to=\"/create-post\"\n                    className=\"cta nav-link btn btn-primary px-2\"\n                  >\n                    Create post\n                  </Link>\n                </li>\n                <li className=\"nav-item me-3\">\n                  <Link to=\"/profile\" className=\"nav-link p-2 profile-link\">\n                    <img\n                      src=\"https://avatars.dicebear.com/api/male/john.svg?mood[]=happy\"\n                      alt=\"\"\n                    />\n                    <span>{user?.name ? user.name.split(\" \")[0] : null}</span>\n                  </Link>\n                </li>\n                <li\n                  className=\"nav-item me-3\"\n                  role=\"button\"\n                  onClick={() => dispatch(logout())}\n                >\n                  <button className=\"nav-link btn btn-link  px-2\">\n                    Logout\n                  </button>\n                </li>\n              </>\n            ) : (\n              <>\n                <li className=\"nav-item me-3\">\n                  <Link to=\"/login\" className=\"nav-link btn btn-link px-2\">\n                    Login\n                  </Link>\n                </li>\n                <li className=\"nav-item me-3\">\n                  <Link\n                    to=\"/register\"\n                    className=\"cta nav-link btn btn-primary  px-2\"\n                  >\n                    Register\n                  </Link>\n                </li>\n              </>\n            )}\n            <li\n              className=\"nav-item  dark-mode-switch\"\n              // role=\"button\"\n              onClick={() => dispatch(toggle_dark_mode())}\n            >\n              {dark ? (\n                <MdLightMode className=\"icon\" />\n              ) : (\n                <MdDarkMode className=\"icon\" />\n              )}\n            </li>\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n// import { LOADING_OFF, LOADING_ON } from \"redux/constants\";\n\nexport default function ProtectedRoute({ component: Component, ...rest }) {\n  // const dispatch = useDispatch();\n  const { isUserLoggedIn } = useSelector((state) => state.common);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isUserLoggedIn ? <Redirect to=\"/login\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n","import React, { Suspense, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./components/Navbar\";\nimport ProtectedRoute from \"components/ProtectedRoute\";\nimport clsx from \"clsx\";\nimport \"styles/app.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport {\n  INFO,\n  CLEAR_ALERT,\n  ERROR,\n  SUCCESS,\n  AUTHENTICATED,\n  NOT_AUTHENTICATED,\n} from \"redux/constants\";\nimport Cookies from \"js-cookie\";\nimport Loading from \"components/Loading\";\nimport Error404 from \"components/Error404\";\nconst Homepage = React.lazy(() => import(\"components/Homepage\"));\nconst Post = React.lazy(() => import(\"components/Post\"));\nconst Register = React.lazy(() => import(\"components/Register\"));\nconst Login = React.lazy(() => import(\"components/Login\"));\nconst CreatePost = React.lazy(() => import(\"components/CreatePost\"));\nconst Profile = React.lazy(() => import(\"components/Profile\"));\nfunction App() {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { dark } = useSelector((state) => state.common);\n  const { type, message } = useSelector((state) => state.alert);\n  const alertOnClose = () => {\n    dispatch({ type: CLEAR_ALERT });\n  };\n\n  const [authenticated, setAuthenticated] = useState(() =>\n    Boolean(Number(Cookies.get(\"isUserLoggedIn\")))\n  );\n  useEffect(() => {\n    if (!authenticated) {\n      return dispatch({\n        type: NOT_AUTHENTICATED,\n        // type: AUTHENTICATED,\n      });\n    } else {\n      return dispatch({\n        type: AUTHENTICATED,\n      });\n    }\n  }, [authenticated]);\n\n  useEffect(() => {\n    switch (type) {\n      case SUCCESS:\n        alert.success(message, {\n          onClose: alertOnClose,\n        });\n        break;\n      case ERROR:\n        alert.error(message, {\n          onClose: alertOnClose,\n        });\n        break;\n      case INFO:\n        alert.info(message, {\n          onClose: alertOnClose,\n        });\n        break;\n      default:\n        break;\n    }\n  }, [type, message]);\n\n  return (\n    <Router>\n      <div className={clsx(\"app\", dark ? \"app_dark\" : \"app_light\")}>\n        <Navbar />\n\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Homepage} />\n            <Route path=\"/post\" component={Post} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n            <ProtectedRoute path=\"/create-post\" component={CreatePost} />\n            <ProtectedRoute path=\"/profile\" component={Profile} />\n            <Route path=\"*\" component={Error404} />\n          </Switch>\n        </Suspense>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { CLEAR_ALERT, ERROR, INFO, SUCCESS } from \"redux/constants\";\n\nconst alertReducer = (state = { type: null, message: null }, action) => {\n  switch (action.type) {\n    case ERROR:\n      return {\n        ...state,\n        type: ERROR,\n        message: action.payload,\n      };\n    case INFO:\n      return {\n        ...state,\n        type: INFO,\n        message: action.payload,\n      };\n    case SUCCESS:\n      return {\n        ...state,\n        type: SUCCESS,\n        message: action.payload,\n      };\n    case CLEAR_ALERT:\n      return {\n        type: null,\n        message: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default alertReducer;\n","const {\n  TOGGLE_DARK_MODE,\n  AUTHENTICATED,\n  NOT_AUTHENTICATED,\n  LOADING_ON,\n  LOADING_OFF,\n  LOGOUT,\n} = require(\"redux/constants\");\n\nconst commonReducer = (\n  state = { dark: false, isUserLoggedIn: null },\n  action\n) => {\n  switch (action.type) {\n    case TOGGLE_DARK_MODE:\n      return {\n        ...state,\n        dark: !state.dark,\n      };\n    case LOADING_ON:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LOADING_OFF:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case AUTHENTICATED:\n      return {\n        ...state,\n        isUserLoggedIn: true,\n      };\n\n    case NOT_AUTHENTICATED:\n      return {\n        ...state,\n        isUserLoggedIn: false,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isUserLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default commonReducer;\n","const {\n  FETCH_POST_SUCCESS,\n  FETCH_POST_FAILURE,\n  FETCH_PROFILE_POST_SUCCESS,\n  FETCH_PROFILE_POST_FAILURE,\n  CLEAR_ALL,\n} = require(\"redux/constants\");\n\nconst postReducer = (\n  state = { fetchedPosts: [], profilePosts: [], userPosts: [] },\n  action\n) => {\n  switch (action.type) {\n    case CLEAR_ALL:\n      return { fetchedPosts: [], profilePosts: [], userPosts: [] };\n    case FETCH_POST_SUCCESS:\n      return {\n        ...state,\n        fetchedPosts: [\n          // ...state.fetchedPosts,\n          ...action.payload,\n        ],\n      };\n    case FETCH_POST_FAILURE:\n      return state;\n    case FETCH_PROFILE_POST_SUCCESS:\n      return {\n        ...state,\n        profilePosts: [\n          // ...state.profilePosts,\n          ...action.payload,\n        ],\n      };\n    case FETCH_PROFILE_POST_FAILURE:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","const {\n  FETCH_USER_INFO_SUCCESS,\n  FETCH_USER_INFO_FAILURE,\n  CLEAR_ALL,\n} = require(\"redux/constants\");\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CLEAR_ALL:\n      return {};\n    case FETCH_USER_INFO_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case FETCH_USER_INFO_FAILURE:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport alertReducer from \"./alertReducer\";\nimport commonReducer from \"./commonReducer\";\nimport postReducer from \"./postReducer\";\nimport userReducer from \"./userReducer\";\n\nconst rootReducer = combineReducers({\n  common: commonReducer,\n  alert: alertReducer,\n  post: postReducer,\n  user: userReducer,\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"redux/reducers/rootReducer\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\nimport axios from \"axios\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nconst isProduction = process.env.REACT_APP_NODE_ENV === \"production\";\naxios.defaults.baseURL = isProduction\n  ? \"https://react-blog-restapi.herokuapp.com/api/\"\n  : \"http://localhost:4000/api/\";\naxios.defaults.withCredentials = true;\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AlertProvider\n        transition={transitions.FADE}\n        position={positions.BOTTOM_LEFT}\n        template={AlertTemplate}\n        timeout={5000}\n        offset=\"30px\"\n      >\n        <App />\n      </AlertProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}